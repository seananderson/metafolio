// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// est_beta_params
NumericVector est_beta_params(double mu, double var);
RcppExport SEXP _metafolio_est_beta_params(SEXP muSEXP, SEXP varSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type var(varSEXP);
    rcpp_result_gen = Rcpp::wrap(est_beta_params(mu, var));
    return rcpp_result_gen;
END_RCPP
}
// impl_error
NumericVector impl_error(NumericVector mu, double sigma_impl);
RcppExport SEXP _metafolio_impl_error(SEXP muSEXP, SEXP sigma_implSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_impl(sigma_implSEXP);
    rcpp_result_gen = Rcpp::wrap(impl_error(mu, sigma_impl));
    return rcpp_result_gen;
END_RCPP
}
// ricker_v_t
double ricker_v_t(double spawners, double a, double b, double d, double v_t);
RcppExport SEXP _metafolio_ricker_v_t(SEXP spawnersSEXP, SEXP aSEXP, SEXP bSEXP, SEXP dSEXP, SEXP v_tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spawners(spawnersSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type v_t(v_tSEXP);
    rcpp_result_gen = Rcpp::wrap(ricker_v_t(spawners, a, b, d, v_t));
    return rcpp_result_gen;
END_RCPP
}
// is_element
bool is_element(int x, NumericVector y);
RcppExport SEXP _metafolio_is_element(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(is_element(x, y));
    return rcpp_result_gen;
END_RCPP
}
// fastlm
arma::colvec fastlm(NumericVector yr, NumericMatrix Xr);
RcppExport SEXP _metafolio_fastlm(SEXP yrSEXP, SEXP XrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type yr(yrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xr(XrSEXP);
    rcpp_result_gen = Rcpp::wrap(fastlm(yr, Xr));
    return rcpp_result_gen;
END_RCPP
}
// fit_ricker
NumericVector fit_ricker(NumericVector S, NumericVector R);
RcppExport SEXP _metafolio_fit_ricker(SEXP SSEXP, SEXP RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type S(SSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type R(RSEXP);
    rcpp_result_gen = Rcpp::wrap(fit_ricker(S, R));
    return rcpp_result_gen;
END_RCPP
}
// ricker_escapement
double ricker_escapement(double a, double b);
RcppExport SEXP _metafolio_ricker_escapement(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(ricker_escapement(a, b));
    return rcpp_result_gen;
END_RCPP
}
// metasim_base
List metasim_base(int n_pop, int n_t, NumericVector spawners_0, NumericVector b, NumericMatrix epsilon_mat, NumericMatrix A_params, bool add_straying, NumericMatrix stray_mat, NumericVector assess_years, NumericMatrix r_escp_goals, double sigma_impl, bool add_impl_error, double decrease_b, bool debug);
RcppExport SEXP _metafolio_metasim_base(SEXP n_popSEXP, SEXP n_tSEXP, SEXP spawners_0SEXP, SEXP bSEXP, SEXP epsilon_matSEXP, SEXP A_paramsSEXP, SEXP add_strayingSEXP, SEXP stray_matSEXP, SEXP assess_yearsSEXP, SEXP r_escp_goalsSEXP, SEXP sigma_implSEXP, SEXP add_impl_errorSEXP, SEXP decrease_bSEXP, SEXP debugSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_pop(n_popSEXP);
    Rcpp::traits::input_parameter< int >::type n_t(n_tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type spawners_0(spawners_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type epsilon_mat(epsilon_matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A_params(A_paramsSEXP);
    Rcpp::traits::input_parameter< bool >::type add_straying(add_strayingSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stray_mat(stray_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type assess_years(assess_yearsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type r_escp_goals(r_escp_goalsSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_impl(sigma_implSEXP);
    Rcpp::traits::input_parameter< bool >::type add_impl_error(add_impl_errorSEXP);
    Rcpp::traits::input_parameter< double >::type decrease_b(decrease_bSEXP);
    Rcpp::traits::input_parameter< bool >::type debug(debugSEXP);
    rcpp_result_gen = Rcpp::wrap(metasim_base(n_pop, n_t, spawners_0, b, epsilon_mat, A_params, add_straying, stray_mat, assess_years, r_escp_goals, sigma_impl, add_impl_error, decrease_b, debug));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_metafolio_est_beta_params", (DL_FUNC) &_metafolio_est_beta_params, 2},
    {"_metafolio_impl_error", (DL_FUNC) &_metafolio_impl_error, 2},
    {"_metafolio_ricker_v_t", (DL_FUNC) &_metafolio_ricker_v_t, 5},
    {"_metafolio_is_element", (DL_FUNC) &_metafolio_is_element, 2},
    {"_metafolio_fastlm", (DL_FUNC) &_metafolio_fastlm, 2},
    {"_metafolio_fit_ricker", (DL_FUNC) &_metafolio_fit_ricker, 2},
    {"_metafolio_ricker_escapement", (DL_FUNC) &_metafolio_ricker_escapement, 2},
    {"_metafolio_metasim_base", (DL_FUNC) &_metafolio_metasim_base, 14},
    {NULL, NULL, 0}
};

RcppExport void R_init_metafolio(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
